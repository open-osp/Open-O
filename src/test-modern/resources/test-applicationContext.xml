<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Modern test configuration that's compatible with legacy SpringUtils pattern -->

    <!-- Enable component scanning -->
    <context:component-scan base-package="ca.openosp.openo">
        <!-- Exclude web components from unit tests -->
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="regex"
            expression="ca.openosp.openo.*.web.*"/>
    </context:component-scan>

    <!-- Property placeholder for test properties -->
    <context:property-placeholder location="classpath:test.properties"/>

    <!-- DataSource configuration for tests -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${test.db.driver:org.h2.Driver}"/>
        <property name="url" value="${test.db.url:jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1}"/>
        <property name="username" value="${test.db.username:sa}"/>
        <property name="password" value="${test.db.password:}"/>
    </bean>

    <!-- Alternative: Use HikariCP for better performance -->
    <!--
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${test.db.driver:org.h2.Driver}"/>
        <property name="jdbcUrl" value="${test.db.url:jdbc:h2:mem:testdb;MODE=MySQL}"/>
        <property name="username" value="${test.db.username:sa}"/>
        <property name="password" value="${test.db.password:}"/>
        <property name="maximumPoolSize" value="5"/>
        <property name="minimumIdle" value="2"/>
    </bean>
    -->

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${test.hibernate.dialect:org.hibernate.dialect.H2Dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${test.hibernate.ddl:create-drop}</prop>
                <prop key="hibernate.show_sql">${test.hibernate.show_sql:false}</prop>
                <prop key="hibernate.format_sql">${test.hibernate.format_sql:false}</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>ca.openosp.openo.commn.model</value>
                <value>ca.openosp.openo.billing.model</value>
                <value>ca.openosp.openo.PMmodule.model</value>
            </list>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Enable transaction annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- JdbcTemplate for raw SQL operations in tests -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- CRITICAL: SpringUtils compatibility bean -->
    <!-- This ensures SpringUtils.getBean() works in tests -->
    <bean id="springUtils" class="ca.openosp.openo.utility.SpringUtils" factory-method="getInstance">
        <property name="applicationContext" ref="applicationContext"/>
    </bean>

    <!-- Application context bean for SpringUtils -->
    <bean id="applicationContext" class="org.springframework.context.support.ClassPathXmlApplicationContext"
          factory-method="getContext"/>

    <!-- SecurityInfoManager mock/stub for tests -->
    <bean id="securityInfoManager" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ca.openosp.openo.managers.SecurityInfoManager"/>
    </bean>

    <!-- Import DAO configurations -->
    <import resource="test-applicationContext-dao.xml"/>

    <!-- Import security configurations if needed -->
    <import resource="test-applicationContext-security.xml"/>

</beans>